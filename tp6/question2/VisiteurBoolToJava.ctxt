#BlueJ class context
comment0.target=VisiteurBoolToJava
comment1.params=ve
comment1.target=VisiteurBoolToJava(question1.VisiteurExpression)
comment2.params=v
comment2.target=java.lang.String\ visite(Vrai)
comment2.text=\n\ Expression\ bool\u00E9enne\ vrai.\n\ \ @return\ un\ string\ "true"\n
comment3.params=f
comment3.target=java.lang.String\ visite(Faux)
comment3.text=Expression\ bool\u00E9enne\ faux.\n@return\ un\ string\ "false"\n
comment4.params=n
comment4.target=java.lang.String\ visite(Non)
comment4.text=Expression\ bool\u00E9enne\ Non.\n@return\ un\ string\ "\!(expr)"\n
comment5.params=ou
comment5.target=java.lang.String\ visite(Ou)
comment5.text=Expression\ bool\u00E9enne\ Ou.\n@return\ un\ string\ "(expr1\ ||\ expr2)"\n
comment6.params=et
comment6.target=java.lang.String\ visite(Et)
comment6.text=Expression\ bool\u00E9enne\ Et.\n@return\ un\ string\ "(\ expr1\ &&\ expr2)"\n
comment7.params=sup
comment7.target=java.lang.String\ visite(Sup)
comment7.text=Expression\ bool\u00E9enne\ Sup\u00E9rieur\ \u00E0.\n@return\ un\ string\ "(\ expr1\ >\ expr2)"\n
comment8.params=eg
comment8.target=java.lang.String\ visite(Egal)
comment8.text=Expression\ bool\u00E9enne\ Egal\ \u00E0.\n@return\ un\ string\ "(\ expr1\ \=\=\ expr2)"\n
comment9.params=inf
comment9.target=java.lang.String\ visite(Inf)
comment9.text=Expression\ bool\u00E9enne\ Inf\u00E9rieur\ \u00E0.\n@return\ un\ string\ "(\ expr1\ <\ expr2)"\n
numComments=10
